@startuml cloud-factory

'------------- familias 1 virtualMachine ------------
abstract class VM {
# int vcpus
# int memoryGB
# boolean memoryOptimization
# boolean diskOptimization
# String keyPairName
# String region

+ getters()
+ setters()
}

class AWSVm {
- AWSMachineType type
- String Region
- String VPC
- String AMI
+ getters()
+ setters()
}
class AzureVm{
- AzureMachineType type
- String  resourceGroup
- String redVital
+ getters()
+ setters()
}
class GCPVm{
- GCPMachineType type
- String zone
- String diskBase
- String project
+ getters()
+ setters()
}
class OnPromiseVm{
    - String networkPhysical
    + getters()
    + setters()
}

enum AWSMachineType {
    
    T3_MEDIUM
    M5_LARGE
    M5_XLARGE
    
    R5_LARGE
    R5_XLARGE
    R5_2XLARGE
    
    C5_LARGE
    C5_XLARGE
    C5_2XLARGE
}
enum AzureMachineType {
    
    D2S_V3
    D4S_V3
    D8S_V3
    
    E2S_V3
    E4S_V3
    E8S_V3
    
    F2S_V2
    F4S_V2
    F8S_V2
}
enum GCPMachineType {
    
    E2_STANDARD_2
    E2_STANDARD_4
    E2_STANDARD_8
    
    N2_HIGHMEM_2
    N2_HIGHMEM_4
    N2_HIGHMEM_8
    
    N2_HIGHCPU_2
    N2_HIGHCPU_4
    N2_HIGHCPU_8
}

'------------- Familia 2 Network ---------------

abstract class Network {
    # String region
    # String[] firewallRules
    # boolean publicIP
    + getters()
    + setters()
}

class AWSNetwork {
    - String vpcId
    - String subnet
    - String IdsecurityGroup
    + getters()
    + setters()
}

class AzureNetwork {
    - String virtualNetwork
    - String subnetName
    - String networkSecurityGroup
    + getters()
    + setters()
}

class GPCNetwork {
    - String networkName
    - String subnetworkName
    - String firewallTag
    + getters()
    + setters()
}

class OnPromiseNetwork {
    - String physicalInterface
    - String vlanId
    - String firewallPolicy
    + getters()
    + setters()
}
'-----------------------------------------------


'------------- Familia 3 Disk ------------------
abstract class Disk {
    # String region
    # int iops
    # int sizeGB
    + getters()
    + setters()
}

class AWSDisk {
    - volumeTypeAWS type
    - boolean encrypted
    + getters()
    + setters()
}

class AzureDisk {
    - diskSku type
    - boolean autoDelete
    + getters()
    + setters()
}

class GPCDisk {
    - diskTypeGPC type
    - boolean autoDelete
    + getters()
    + setters()
}

class OnPromiseDisk{
    - String storagePoo
    - String raidLevel
    + getters()
    + setters()
}

enum volumeTypeAWS {
    gp2 
    io1
}

enum diksSku {
    Standard_LRS
    Premium_LRS
}

enum diskTypeGPC {
    pd-standard
    pd-ssd
}

'-----------------------------------------------


'----------------- Fabricas --------------------

abstract class Cloud{
+ {abstract} ProvisionResult VmSupply(VM vm)
+ {abstract} ProvisionResult NetWorkSupply(Network net)
+ {abstract} ProvisionResult DiskSupply(Disk disk)
}

class ProviderCloud {
    - Map<String, Cloud> methods
    + Cloud getProvider()
}

class AWS{}
class AZURE{}
class GCP{}
class OnPromise{}

'-----------------------------------------------

enum statusResult {
    SUCCESS
    ERROR
}

class ProvisionResult {
    - statusResult status
    - VM vm
    - string message
}

' ----------------- Relaciones --------------------

Cloud <|-- AWS
Cloud <|-- GCP
Cloud <|-- AZURE
Cloud <|-- OnPromise

GCP --> GCPVm : create
GCP --> GPCDisk : create
GCP --> GPCNetwork : create

AWS --> AWSVm : create
AWS --> AWSNetwork : create
AWS --> AWSDisk : create

AZURE --> AzureNetwork : create
AZURE --> AzureVm : create
AZURE --> AzureDisk : create

OnPromise --> OnPromiseVm : create 
OnPromise --> OnPromiseDisk : create
OnPromise --> OnPromiseNetwork : create

Cloud --> ProviderCloud

VM <|-- AzureVm
VM <|-- GCPVm
VM <|-- AWSVm
VM <|-- OnPromiseVm

Network <|-- AzureNetwork
Network <|-- AWSNetwork
Network <|-- GPCNetwork
Network <|-- OnPromiseNetwork

Disk <|-- AWSDisk
Disk <|-- OnPromiseDisk
Disk <|-- AzureDisk
Disk <|-- GPCDisk

AzureMachineType <-- AzureVm : has
AWSMachineType <-- AWSVm : has
GCPMachineType <-- GCPVm : has 

AWSDisk --> volumeTypeAWS : has
AzureDisk --> diksSku : has
GPCDisk --> diskTypeGPC : has


Cloud --> ProvisionResult: return
statusResult <-- ProvisionResult : has



' ========== BUILDER ==========
interface BuilderProviderVm {
    + reset()
    + setVcpus(int vcpus)
    + setMemoryGB(int memory)
    + setMemoryOptimization(boolean)
    + setDiskOptimization(boolean)
    + setKeyPairName(string)
    + setRegion(string)
    + setNetworkConfig(...)
    + setDiskConfig(...)
    + getResult(): ProvisionResult
}

class Director {
    - BuilderProviderVm builder
    + setBuilder(BuilderProviderVm)
    + createStandard(string machineSize)
    + createMemoryOpt(string machineSize)
    + createComputeOpt(string machineSize)
}

class ConcreteVmAws implements BuilderProviderVm {
    - AWS cloud
    - int vcpus
    - int memoryGB
    - ...
}

class ConcreteVmAzure implements BuilderProviderVm {
    - AZURE cloud
}

class ConcreteVmGcp implements BuilderProviderVm {
    - GCP cloud
}


' ========== RELACIONES ==========
Director --> BuilderProviderVm
ConcreteVmAws --> AWS : usa
ConcreteVmAzure --> AZURE : usa
ConcreteVmGcp --> GCP : usa

@enduml