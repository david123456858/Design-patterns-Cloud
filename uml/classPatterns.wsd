@startuml cloud-factory

'------------- familias 1 virtualMachine ------------
abstract class VM {
- String Ram
- String CPUs
- String disk
}

class AWSVm {
- AWSMachineType type
- String Region
- String VPC
- String AMI
}
class AzureVm{
- AzureMachineType type
- String  resourceGroup
- String redVital
}
class GCPVm{
- GCPMachineType type
- String zone
- String diskBase
- String project
}
class OnPromiseVm{
    - String networkPhysical
}

enum AWSMachineType{
    t2.micro 
    m5.large
}
enum AzureMachineType {
    Standard_B1s
}
enum GCPMachineType {
    n1-standard-1
}

'------------- Familia 2 Network ---------------

class Network {
    
}

class AWSNetwork {
    - String vpcId
    - String subnet
    - String IdsecurityGroup
}

class AzureNetwork {
    - String virtualNetwork
    - String subnetName
    - String networkSecurityGroup
}

class GPCNetwork {
    - String networkName
    - String subnetworkName
    - String firewallTag
}

class OnPromiseNetwork {
    - String physicalInterface
    - String vlanId
    - String firewallPolicy
}
'-----------------------------------------------




'------------- Familia 3 Disk ------------------
abstract class disk {

}

class AWSDisk {
    
}

class AzureDisk {
    
}

class GPCDisk {

}

'-----------------------------------------------


'----------------- Fabricas --------------------

abstract class Cloud{
+ getProviderVm()
+ {abstract} ProvisionResult VmSupply(VM vm)
}

class ProviderCloud {
    - Map<String, Cloud> methods
    + Cloud getProvider()
}

class AWS{}
class AZURE{}
class GCP{}
class OnPromise{}

'-----------------------------------------------






enum statusResult {
    SUCCESS
    ERROR
}

class ProvisionResult {
    - statusResult status
    - VM vm
    - string message
}


' Cloud <|-- AWS
' Cloud <|-- GCP
' Cloud <|-- AZURE
' Cloud <|-- OnPromise

' AWS --> AWSVm : create
' AZURE --> AzureVm : create
' GCP --> GCPVm : create

' Cloud --> ProviderCloud

' VM <|-- AzureVm
' VM <|-- GCPVm
' VM <|-- AWSVm
' VM <|-- OnPromiseVm

' AzureMachineType <-- AzureVm : has
' AWSMachineType <-- AWSVm : has
' GCPMachineType <-- GCPVm : has 


' Cloud --> ProvisionResult: return
' statusResult <-- ProvisionResult : has


@enduml